// Code generated by protoc-gen-go. DO NOT EDIT.
// source: npl.proto

package go_micro_srv_npl

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// NPL response
type NplResponse struct {
	Participle           []*Participle `protobuf:"bytes,1,rep,name=participle,proto3" json:"participle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NplResponse) Reset()         { *m = NplResponse{} }
func (m *NplResponse) String() string { return proto.CompactTextString(m) }
func (*NplResponse) ProtoMessage()    {}
func (*NplResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9214f071d6278ca9, []int{0}
}

func (m *NplResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NplResponse.Unmarshal(m, b)
}
func (m *NplResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NplResponse.Marshal(b, m, deterministic)
}
func (m *NplResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NplResponse.Merge(m, src)
}
func (m *NplResponse) XXX_Size() int {
	return xxx_messageInfo_NplResponse.Size(m)
}
func (m *NplResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NplResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NplResponse proto.InternalMessageInfo

func (m *NplResponse) GetParticiple() []*Participle {
	if m != nil {
		return m.Participle
	}
	return nil
}

// NPL Participle
type Participle struct {
	Word                 string   `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Wordtype             int32    `protobuf:"varint,2,opt,name=wordtype,proto3" json:"wordtype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Participle) Reset()         { *m = Participle{} }
func (m *Participle) String() string { return proto.CompactTextString(m) }
func (*Participle) ProtoMessage()    {}
func (*Participle) Descriptor() ([]byte, []int) {
	return fileDescriptor_9214f071d6278ca9, []int{1}
}

func (m *Participle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Participle.Unmarshal(m, b)
}
func (m *Participle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Participle.Marshal(b, m, deterministic)
}
func (m *Participle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Participle.Merge(m, src)
}
func (m *Participle) XXX_Size() int {
	return xxx_messageInfo_Participle.Size(m)
}
func (m *Participle) XXX_DiscardUnknown() {
	xxx_messageInfo_Participle.DiscardUnknown(m)
}

var xxx_messageInfo_Participle proto.InternalMessageInfo

func (m *Participle) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *Participle) GetWordtype() int32 {
	if m != nil {
		return m.Wordtype
	}
	return 0
}

// NPL Request
type SentenceRequest struct {
	Sentence             string   `protobuf:"bytes,1,opt,name=sentence,proto3" json:"sentence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SentenceRequest) Reset()         { *m = SentenceRequest{} }
func (m *SentenceRequest) String() string { return proto.CompactTextString(m) }
func (*SentenceRequest) ProtoMessage()    {}
func (*SentenceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9214f071d6278ca9, []int{2}
}

func (m *SentenceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SentenceRequest.Unmarshal(m, b)
}
func (m *SentenceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SentenceRequest.Marshal(b, m, deterministic)
}
func (m *SentenceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SentenceRequest.Merge(m, src)
}
func (m *SentenceRequest) XXX_Size() int {
	return xxx_messageInfo_SentenceRequest.Size(m)
}
func (m *SentenceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SentenceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SentenceRequest proto.InternalMessageInfo

func (m *SentenceRequest) GetSentence() string {
	if m != nil {
		return m.Sentence
	}
	return ""
}

func init() {
	proto.RegisterType((*NplResponse)(nil), "go.micro.srv.npl.NplResponse")
	proto.RegisterType((*Participle)(nil), "go.micro.srv.npl.Participle")
	proto.RegisterType((*SentenceRequest)(nil), "go.micro.srv.npl.SentenceRequest")
}

func init() { proto.RegisterFile("npl.proto", fileDescriptor_9214f071d6278ca9) }

var fileDescriptor_9214f071d6278ca9 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x3f, 0x4b, 0xc0, 0x30,
	0x10, 0xc5, 0x8d, 0xff, 0xb0, 0x57, 0x44, 0xc9, 0x54, 0x8a, 0x42, 0xcd, 0xd4, 0xc5, 0x0c, 0x75,
	0xed, 0xee, 0x20, 0x14, 0x49, 0x3f, 0x41, 0x8d, 0x87, 0x04, 0x62, 0x72, 0x26, 0xb1, 0xe2, 0xb7,
	0x97, 0x96, 0x52, 0x4b, 0x3b, 0x25, 0xef, 0xee, 0x77, 0xef, 0x8e, 0x07, 0x99, 0x23, 0x2b, 0x29,
	0xf8, 0xe4, 0xf9, 0xed, 0x87, 0x97, 0x9f, 0x46, 0x07, 0x2f, 0x63, 0x18, 0xa5, 0x23, 0x2b, 0x5e,
	0x20, 0xef, 0xc8, 0x2a, 0x8c, 0xe4, 0x5d, 0x44, 0xde, 0x02, 0xd0, 0x10, 0x92, 0xd1, 0x86, 0x2c,
	0x16, 0xac, 0x3a, 0xab, 0xf3, 0xe6, 0x4e, 0xee, 0xa7, 0xe4, 0xeb, 0xca, 0xa8, 0x0d, 0x2f, 0x5a,
	0x80, 0xff, 0x0e, 0xe7, 0x70, 0xfe, 0xe3, 0xc3, 0x7b, 0xc1, 0x2a, 0x56, 0x67, 0x6a, 0xfe, 0xf3,
	0x12, 0xae, 0xa6, 0x37, 0xfd, 0x12, 0x16, 0xa7, 0x15, 0xab, 0x2f, 0xd4, 0xaa, 0xc5, 0x23, 0xdc,
	0xf4, 0xe8, 0x12, 0x3a, 0x8d, 0x0a, 0xbf, 0xbe, 0x31, 0xa6, 0x09, 0x8f, 0x4b, 0x69, 0xb1, 0x59,
	0x75, 0x33, 0x00, 0x74, 0x64, 0x7b, 0x0c, 0xa3, 0xd1, 0xc8, 0x7b, 0xb8, 0x7e, 0xc6, 0xb4, 0xd9,
	0xfe, 0x70, 0xbc, 0x7a, 0xe7, 0x5e, 0xde, 0x1f, 0x91, 0x4d, 0x16, 0xe2, 0xe4, 0xed, 0x72, 0x4e,
	0xed, 0xe9, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x77, 0x8e, 0x99, 0x42, 0x01, 0x00, 0x00,
}
